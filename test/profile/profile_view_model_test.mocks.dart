// Mocks generated by Mockito 5.4.6 from annotations
// in flowery/test/profile/profile_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flowery/data/model/profile_model/addAddressRequest.dart'
    as _i10;
import 'package:flowery/domain/common/api_result.dart' as _i5;
import 'package:flowery/domain/entity/profile_entity/addaddress.dart' as _i9;
import 'package:flowery/domain/entity/profile_entity/citiesentity.dart' as _i6;
import 'package:flowery/domain/entity/profile_entity/statesentity.dart' as _i8;
import 'package:flowery/domain/repository_contract/profile_repository_contract/profile_repository_contract.dart'
    as _i2;
import 'package:flowery/domain/use_case/profile_use_case/cities_use_case.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProfileRepositoryContract_0 extends _i1.SmartFake
    implements _i2.ProfileRepositoryContract {
  _FakeProfileRepositoryContract_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [cities_use_case].
///
/// See the documentation for Mockito's code generation for more information.
class Mockcities_use_case extends _i1.Mock implements _i3.cities_use_case {
  Mockcities_use_case() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ProfileRepositoryContract get profileRepositoryContract =>
      (super.noSuchMethod(
            Invocation.getter(#profileRepositoryContract),
            returnValue: _FakeProfileRepositoryContract_0(
              this,
              Invocation.getter(#profileRepositoryContract),
            ),
          )
          as _i2.ProfileRepositoryContract);

  @override
  set profileRepositoryContract(
    _i2.ProfileRepositoryContract? _profileRepositoryContract,
  ) => super.noSuchMethod(
    Invocation.setter(#profileRepositoryContract, _profileRepositoryContract),
    returnValueForMissingStub: null,
  );

  @override
  _i4.Future<_i5.ApiResult<List<_i6.Citiesentity>>> get() =>
      (super.noSuchMethod(
            Invocation.method(#get, []),
            returnValue:
                _i4.Future<_i5.ApiResult<List<_i6.Citiesentity>>>.value(
                  _i7.dummyValue<_i5.ApiResult<List<_i6.Citiesentity>>>(
                    this,
                    Invocation.method(#get, []),
                  ),
                ),
          )
          as _i4.Future<_i5.ApiResult<List<_i6.Citiesentity>>>);

  @override
  _i4.Future<_i5.ApiResult<List<_i8.statesentity>>> getstates() =>
      (super.noSuchMethod(
            Invocation.method(#getstates, []),
            returnValue:
                _i4.Future<_i5.ApiResult<List<_i8.statesentity>>>.value(
                  _i7.dummyValue<_i5.ApiResult<List<_i8.statesentity>>>(
                    this,
                    Invocation.method(#getstates, []),
                  ),
                ),
          )
          as _i4.Future<_i5.ApiResult<List<_i8.statesentity>>>);

  @override
  _i4.Future<_i5.ApiResult<_i9.Addaddress>> SaveAddress(
    _i10.AddAddressRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#SaveAddress, [request]),
            returnValue: _i4.Future<_i5.ApiResult<_i9.Addaddress>>.value(
              _i7.dummyValue<_i5.ApiResult<_i9.Addaddress>>(
                this,
                Invocation.method(#SaveAddress, [request]),
              ),
            ),
          )
          as _i4.Future<_i5.ApiResult<_i9.Addaddress>>);
}